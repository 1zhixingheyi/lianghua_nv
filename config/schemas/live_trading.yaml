# 实盘交易数据系统配置文件
# Live Trading Data System Configuration Schema

# 系统基础配置
system:
  name: "live-trading-data-system"
  version: "1.0.0"
  environment: "${ENVIRONMENT:production}"  # development, testing, production
  debug: false
  timezone: "Asia/Shanghai"
  
  # 日志配置
  logging:
    level: "${LOG_LEVEL:INFO}"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    format: "json"  # json, text
    file: "/var/log/live_trading/system.log"
    max_size: "100MB"
    backup_count: 10
    rotation: "daily"  # daily, weekly, size
    
  # 进程配置
  process:
    workers: 4
    max_memory: "2GB"
    restart_threshold: 100  # 重启阈值（内存使用率%）
    graceful_timeout: 30  # 优雅关闭超时时间（秒）

# 数据源配置
data_sources:
  # 股票数据源
  stock:
    # 主要数据源
    primary:
      name: "tushare"
      api_key: "${TUSHARE_API_KEY}"
      base_url: "http://api.tushare.pro"
      timeout: 30
      retry_times: 3
      retry_delay: 1
      rate_limit: 200  # 每分钟请求数
      
    # 备用数据源
    backup:
      - name: "akshare"
        enabled: true
        timeout: 30
        retry_times: 2
      - name: "baostock"
        enabled: true
        timeout: 30
        retry_times: 2
        
  # 期货数据源
  futures:
    primary:
      name: "ctp"
      broker_id: "${CTP_BROKER_ID}"
      user_id: "${CTP_USER_ID}"
      password: "${CTP_PASSWORD}"
      md_server: "tcp://180.168.146.187:10131"
      td_server: "tcp://180.168.146.187:10130"
      
  # 外汇数据源
  forex:
    primary:
      name: "alpha_vantage"
      api_key: "${ALPHA_VANTAGE_API_KEY}"
      base_url: "https://www.alphavantage.co/query"
      timeout: 30
      
  # 加密货币数据源
  crypto:
    primary:
      name: "binance"
      api_key: "${BINANCE_API_KEY}"
      secret_key: "${BINANCE_SECRET_KEY}"
      base_url: "https://api.binance.com"
      testnet: false

# 实时数据流配置
realtime_stream:
  enabled: true
  buffer_size: 10000  # 缓冲区大小
  batch_size: 100  # 批处理大小
  flush_interval: 1.0  # 刷新间隔（秒）
  max_latency: 0.1  # 最大延迟（秒）
  compression: true  # 数据压缩
  heartbeat_interval: 30.0  # 心跳间隔（秒）
  
  # WebSocket配置
  websocket:
    enabled: true
    reconnect_interval: 5.0
    max_reconnect_attempts: 10
    ping_interval: 20.0
    ping_timeout: 10.0

# 数据更新频率配置（按交易时段）
update_frequencies:
  pre_market:
    tick: 1000  # 毫秒
    minute_1: 30000  # 毫秒
    minute_5: 120000  # 毫秒
  market_open:
    tick: 100  # 毫秒
    second_1: 500  # 毫秒
    minute_1: 10000  # 毫秒
    minute_5: 30000  # 毫秒
  continuous:
    tick: 50  # 毫秒
    second_1: 200  # 毫秒
    minute_1: 5000  # 毫秒
    minute_5: 15000  # 毫秒
  market_close:
    tick: 1000  # 毫秒
    minute_1: 30000  # 毫秒
    minute_5: 120000  # 毫秒
  after_hours:
    minute_1: 60000  # 毫秒
    minute_5: 300000  # 毫秒
    hour_1: 1800000  # 毫秒
  overnight:
    minute_5: 600000  # 毫秒
    hour_1: 3600000  # 毫秒
    daily: 21600000  # 毫秒

# 缓存配置
cache:
  enabled: true
  redis:
    host: "${REDIS_HOST:localhost}"
    port: 6379
    db: 0
    password: "${REDIS_PASSWORD}"
    pool_size: 20
    socket_timeout: 5.0
    socket_connect_timeout: 5.0
  ttl_config:
    tick: 300  # 5分钟
    second_1: 600  # 10分钟
    minute_1: 1800  # 30分钟
    minute_5: 3600  # 1小时
    minute_15: 7200  # 2小时
    hour_1: 86400  # 1天
    daily: 604800  # 1周
  memory_cache:
    enabled: true
    max_size: 1000  # 最大缓存条目数
    ttl: 60  # 内存缓存TTL（秒）

# API服务配置
api:
  # HTTP API配置
  http:
    host: "0.0.0.0"
    port: 8000
    workers: 4
    max_requests: 1000
    max_requests_jitter: 50
    timeout: 30
    keepalive: 2
    
    # CORS配置
    cors:
      allow_origins: ["*"]
      allow_methods: ["GET", "POST", "PUT", "DELETE"]
      allow_headers: ["*"]
      allow_credentials: true
      
    # 限流配置
    rate_limit:
      enabled: true
      default_limit: "100/minute"
      burst_limit: "200/minute"
      
      # 不同端点的限流配置
      endpoints:
        "/api/v1/data/real_time": "1000/minute"
        "/api/v1/data/historical": "100/minute"
        "/api/v1/auth/login": "10/minute"
        
  # WebSocket配置
  websocket:
    enabled: true
    max_connections: 1000
    ping_interval: 30
    ping_timeout: 10
    max_message_size: 1048576  # 1MB
    
    # 订阅配置
    subscription:
      max_subscriptions_per_client: 100
      heartbeat_interval: 30
      
  # 认证配置
  auth:
    # JWT配置
    jwt:
      secret_key: "${JWT_SECRET_KEY}"
      algorithm: "HS256"
      access_token_expire: 3600  # 1小时
      refresh_token_expire: 604800  # 7天
      
    # API Key配置
    api_key:
      enabled: true
      header_name: "X-API-Key"
      
    # OAuth配置（可选）
    oauth:
      enabled: false
      providers:
        google:
          client_id: "${GOOGLE_CLIENT_ID}"
          client_secret: "${GOOGLE_CLIENT_SECRET}"

# 任务调度配置
scheduler:
  # 调度器类型
  type: "advanced"  # simple, advanced
  max_workers: 10
  thread_pool_size: 20
  
  # 任务配置
  tasks:
    # 数据获取任务
    data_fetch:
      enabled: true
      interval: 60  # 秒
      timeout: 300
      retry_times: 3
      priority: "high"
      
    # 数据清理任务
    data_cleanup:
      enabled: true
      schedule: "0 2 * * *"  # 每天凌晨2点
      timeout: 3600
      priority: "low"
      
    # 健康检查任务
    health_check:
      enabled: true
      interval: 30
      timeout: 10
      priority: "high"
      
    # 数据同步任务
    data_sync:
      enabled: true
      interval: 300  # 5分钟
      timeout: 600
      priority: "medium"
      
  # 交易时段配置
  trading_sessions:
    stock:
      morning:
        start: "09:30"
        end: "11:30"
        timezone: "Asia/Shanghai"
      afternoon:
        start: "13:00"
        end: "15:00"
        timezone: "Asia/Shanghai"
    futures:
      day:
        start: "09:00"
        end: "15:15"
        timezone: "Asia/Shanghai"
      night:
        start: "21:00"
        end: "02:30"
        timezone: "Asia/Shanghai"

# 监控配置
monitoring:
  # Prometheus配置
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
    
  # 健康检查配置
  health_check:
    enabled: true
    endpoint: "/health"
    interval: 30
    timeout: 10
    
    # 检查项配置
    checks:
      database: true
      redis: true
      external_apis: true
      disk_space: true
      memory_usage: true
      
  # 告警配置
  alerts:
    enabled: true
    
    # 邮件告警
    email:
      enabled: true
      smtp_server: "smtp.gmail.com"
      smtp_port: 587
      username: "${EMAIL_USERNAME}"
      password: "${EMAIL_PASSWORD}"
      from_address: "alerts@trading-system.com"
      to_addresses:
        - "admin@trading-system.com"
        - "ops@trading-system.com"
        
    # 短信告警
    sms:
      enabled: false
      provider: "aliyun"  # aliyun, tencent
      access_key: "${SMS_ACCESS_KEY}"
      secret_key: "${SMS_SECRET_KEY}"
      
    # 企业微信告警
    wechat:
      enabled: false
      webhook_url: "${WECHAT_WEBHOOK_URL}"
      
    # 钉钉告警
    dingtalk:
      enabled: false
      webhook_url: "${DINGTALK_WEBHOOK_URL}"
      secret: "${DINGTALK_SECRET}"

# 数据质量配置
quality:
  enabled: true
  realtime_checks:
    price_range_check:
      enabled: true
      max_change_percent: 20.0  # 最大涨跌幅
      action: "warn"  # warn, reject, correct
    volume_check:
      enabled: true
      min_volume: 0
      max_volume_multiplier: 100.0  # 相对于平均成交量的倍数
      action: "warn"
    timestamp_check:
      enabled: true
      max_delay: 10.0  # 最大延迟（秒）
      action: "reject"
    duplicate_check:
      enabled: true
      window_size: 100  # 检查窗口大小
      action: "reject"
  data_validation:
    required_fields: ["symbol", "timestamp", "price", "volume"]
    numeric_fields: ["price", "volume", "open", "high", "low", "close"]
    positive_fields: ["volume"]
    non_negative_fields: ["price", "open", "high", "low", "close"]

# 故障恢复配置
failover:
  enabled: true
  detection_interval: 5.0  # 故障检测间隔（秒）
  recovery_timeout: 60.0  # 恢复超时（秒）
  max_failover_attempts: 3
  circuit_breaker:
    enabled: true
    failure_threshold: 5  # 失败阈值
    recovery_timeout: 30.0  # 恢复超时（秒）
    half_open_max_calls: 3  # 半开状态最大调用次数

# 性能优化配置
performance:
  # 连接池配置
  connection_pools:
    database:
      min_size: 5
      max_size: 20
      timeout: 30
      
    redis:
      min_size: 5
      max_size: 50
      timeout: 5
      
  # 批处理配置
  batch_processing:
    enabled: true
    batch_size: 1000
    flush_interval: 5
    max_memory: "500MB"
    
  # 压缩配置
  compression:
    enabled: true
    algorithm: "gzip"  # gzip, lz4, snappy
    level: 6
    
  # 并发配置
  concurrency:
    max_workers: 10
    max_concurrent_requests: 100
    queue_size: 1000

# 交易时间配置
trading_hours:
  a_share:
    morning:
      start: "09:30"
      end: "11:30"
    afternoon:
      start: "13:00"
      end: "15:00"
    timezone: "Asia/Shanghai"
  us_stock:
    regular:
      start: "09:30"
      end: "16:00"
    pre_market:
      start: "04:00"
      end: "09:30"
    after_hours:
      start: "16:00"
      end: "20:00"
    timezone: "America/New_York"
  hk_stock:
    morning:
      start: "09:30"
      end: "12:00"
    afternoon:
      start: "13:00"
      end: "16:00"
    timezone: "Asia/Hong_Kong"

# 数据字段映射
field_mapping:
  standard: ["symbol", "timestamp", "open", "high", "low", "close", "volume", "amount"]
  tick: ["symbol", "timestamp", "price", "volume", "direction", "order_type"]
  level2: ["symbol", "timestamp", "bid_prices", "bid_volumes", "ask_prices", "ask_volumes"]
  fundamental: ["symbol", "date", "pe_ratio", "pb_ratio", "market_cap", "total_shares"]

# 符号标准化配置
symbol_normalization:
  enabled: true
  rules:
    tushare:
      pattern: "(\\d{6})\\.(SH|SZ)"
      format: "{code}.{exchange}"
    yahoo:
      pattern: "(\\d{6})\\.(SS|SZ)"
      format: "{code}.{exchange}"
    sina:
      pattern: "(sh|sz)(\\d{6})"
      format: "{exchange}{code}"
  exchange_mapping:
    SH: "SS"  # 上交所
    SZ: "SZ"  # 深交所
    BJ: "BJ"  # 北交所